version: '3.7'
services:

  postgresql:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/productdb
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgresql
      - kafka
    ports:
      - "6001:6001"
      - "10001:10001"
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/orderdb
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
      GRPC_SERVER_URL: product-service:10001
    depends_on:
      - postgresql
      - kafka
      - product-service
    ports:
      - "6002:6002"
  delivery-service:
    build:
      context: ./delivery-service
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/deliverydb
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgresql
      - kafka
    ports:
      - "6003:6003"
  kafka-message-service:
    build:
      context: ./kafka-message-service
      dockerfile: Dockerfile
    environment:
      SPRING_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgresql
      - kafka
    ports:
      - "8080:8080"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
volumes:
  postgres_data: